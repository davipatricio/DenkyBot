on:
  pull_request:
  push:
    paths:
      - 'packages/**/*.ts'
      - 'packages/**/*.prisma'
      - 'packages/**/package.json'
      - 'packages/**/tsconfig.json'
      - 'tsconfig.json'
      - 'package.json'
      - 'turbo.json'

jobs:
  eslint:
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: |
         **/node_modules
         ${{ steps.yarn-cache-dir-path.outputs.dir }}

        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: ESLint cache
      id: eslint-cache
      uses: actions/cache@v3
      with:
        path: .eslintcache
        key: eslint-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
        restore-keys: |
          eslint-${{ github.job }}-${{ github.ref_name }}-

    - name: Install Node v18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'yarn'
        cache-dependency-path: yarn.lock

    - name: Install dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn --frozen-lockfile

    - name: Run ESLint
      run: npx eslint packages --cache

  typescript:
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    name: TypeScript Transpile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Turbo cache
      id: turbo-cache
      uses: actions/cache@v3
      with:
        path: .turbo
        key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
        restore-keys: |
          turbo-${{ github.job }}-${{ github.ref_name }}-

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: |
         **/node_modules
         ${{ steps.yarn-cache-dir-path.outputs.dir }}

        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Node v18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'yarn'
        cache-dependency-path: yarn.lock

    - name: Install dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn --frozen-lockfile

    - name: Generate Prisma schema
      run: yarn prisma --cache-dir=".turbo"

    - name: TypeScript Test
      run: yarn typecheck --cache-dir=".turbo"
